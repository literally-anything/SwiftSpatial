{"includedArchiveIdentifiers":["SwiftSpatial"],"interfaceLanguages":{"swift":[{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/approximatelyequatable\/magnitude","title":"Magnitude","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/approximatelyequatable\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Self, absoluteTolerance: Self.Magnitude, relativeTolerance: Self.Magnitude) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/approximatelyequatable\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: Self, relativeTolerance: Self.Magnitude) -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/approximatelyequatable\/isapproximatelyequal(to:tolerance:)-8kzs2","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"title":"ApproximatelyEquatable Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/approximatelyequatable\/isapproximatelyequal(to:tolerance:)-4hvhx","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/approximatelyequatable","title":"ApproximatelyEquatable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/primitive2d\/isfinite","title":"var isFinite: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/primitive2d\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/primitive2d\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/primitive2d\/apply(_:)-98y6r","title":"func apply(Pose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive2d\/apply(_:)-9v0l9","title":"func apply(ScaledPose2D)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/primitive2d\/applying(_:)-c0c0","title":"func applying(ScaledPose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive2d\/applying(_:)-1hker","title":"func applying(Pose2D) -> Self","type":"method"}],"title":"Primitive2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/primitive2d\/applying(_:)-2qpjd","title":"func applying(ScaledPose2D) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/primitive2d\/applying(_:)-c0c0","title":"func applying(ScaledPose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive2d\/applying(_:)-1hker","title":"func applying(Pose2D) -> Self","type":"method"}],"title":"Primitive2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/primitive2d\/applying(_:)-89uys","title":"func applying(Pose2D) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/primitive2d\/unapply(_:)-58qmt","title":"func unapply(ScaledPose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive2d\/unapply(_:)-u7yw","title":"func unapply(Pose2D)","type":"method"}],"title":"Primitive2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/primitive2d\/unapply(_:)-53owq","title":"func unapply(ScaledPose2D)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/primitive2d\/unapply(_:)-u7yw","title":"func unapply(Pose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive2d\/unapply(_:)-58qmt","title":"func unapply(ScaledPose2D)","type":"method"}],"title":"Primitive2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/primitive2d\/unapply(_:)-5cmqf","title":"func unapply(Pose2D)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/primitive2d\/unapplying(_:)-xfw8","title":"func unapplying(Pose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive2d\/unapplying(_:)-uupj","title":"func unapplying(ScaledPose2D) -> Self","type":"method"}],"title":"Primitive2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/primitive2d\/unapplying(_:)-25k6w","title":"func unapplying(ScaledPose2D) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/primitive2d\/unapplying(_:)-xfw8","title":"func unapplying(Pose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive2d\/unapplying(_:)-uupj","title":"func unapplying(ScaledPose2D) -> Self","type":"method"}],"title":"Primitive2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/primitive2d\/unapplying(_:)-4wpzd","title":"func unapplying(Pose2D) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/primitive2d\/infinity","title":"static var infinity: Self","type":"property"},{"path":"\/documentation\/swiftspatial\/primitive2d\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/swiftspatial\/primitive2d","title":"Primitive2D","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/primitive3d\/isfinite","title":"var isFinite: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/primitive3d\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/primitive3d\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/primitive3d\/apply(_:)-7y1f8","title":"func apply(Pose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive3d\/apply(_:)-96sek","title":"func apply(ScaledPose3D)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/primitive3d\/applying(_:)-7jv2p","title":"func applying(Pose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive3d\/applying(_:)-82eqg","title":"func applying(ScaledPose3D) -> Self","type":"method"}],"title":"Primitive3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/primitive3d\/applying(_:)-1l9aa","title":"func applying(ScaledPose3D) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/primitive3d\/applying(_:)-7jv2p","title":"func applying(Pose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive3d\/applying(_:)-82eqg","title":"func applying(ScaledPose3D) -> Self","type":"method"}],"title":"Primitive3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/primitive3d\/applying(_:)-neyg","title":"func applying(Pose3D) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/primitive3d\/unapply(_:)-6w693","title":"func unapply(ScaledPose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive3d\/unapply(_:)-44ns3","title":"func unapply(Pose3D)","type":"method"}],"title":"Primitive3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/primitive3d\/unapply(_:)-3yz0v","title":"func unapply(Pose3D)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/primitive3d\/unapply(_:)-44ns3","title":"func unapply(Pose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive3d\/unapply(_:)-6w693","title":"func unapply(ScaledPose3D)","type":"method"}],"title":"Primitive3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/primitive3d\/unapply(_:)-ndmr","title":"func unapply(ScaledPose3D)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/primitive3d\/unapplying(_:)-2a9v","title":"func unapplying(Pose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive3d\/unapplying(_:)-j782","title":"func unapplying(ScaledPose3D) -> Self","type":"method"}],"title":"Primitive3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/primitive3d\/unapplying(_:)-2ikjy","title":"func unapplying(ScaledPose3D) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/primitive3d\/unapplying(_:)-j782","title":"func unapplying(ScaledPose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/primitive3d\/unapplying(_:)-2a9v","title":"func unapplying(Pose3D) -> Self","type":"method"}],"title":"Primitive3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/primitive3d\/unapplying(_:)-7rdmr","title":"func unapplying(Pose3D) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/primitive3d\/infinity","title":"static var infinity: Self","type":"property"},{"path":"\/documentation\/swiftspatial\/primitive3d\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/swiftspatial\/primitive3d","title":"Primitive3D","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotatable2d\/flip(along:)","title":"func flip(along: Axis2D)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/rotatable2d\/flipped(along:)-8jq2r","title":"func flipped(along: Axis2D) -> Self","type":"method"}],"title":"Rotatable2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/rotatable2d\/flipped(along:)-717w0","title":"func flipped(along: Axis2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/rotatable2d\/rotate(by:)","title":"func rotate(by: Angle2D)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/rotatable2d\/rotated(by:)-80v3","title":"func rotated(by: Angle2D) -> Self","type":"method"}],"title":"Rotatable2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/rotatable2d\/rotated(by:)-2jwyd","title":"func rotated(by: Angle2D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/rotatable2d","title":"Rotatable2D","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/rotatable3d\/rotate(by:)-228uk","title":"func rotate(by: Rotation3D)","type":"method"}],"title":"Rotatable3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/rotatable3d\/rotate(by:)-4l8qt","title":"func rotate(by: simd_quatd)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/rotatable3d\/rotate(by:)-228uk","title":"func rotate(by: Rotation3D)","type":"method"}],"title":"Rotatable3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/rotatable3d\/rotate(by:)-7d6oh","title":"func rotate(by: Rotation3D)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/rotatable3d\/rotated(by:)-2jbte","title":"func rotated(by: Rotation3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/rotatable3d\/rotated(by:)-nrc8","title":"func rotated(by: simd_quatd) -> Self","type":"method"}],"title":"Rotatable3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/rotatable3d\/rotated(by:)-1zzti","title":"func rotated(by: Rotation3D) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/rotatable3d\/rotated(by:)-nrc8","title":"func rotated(by: simd_quatd) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/rotatable3d\/rotated(by:)-2jbte","title":"func rotated(by: Rotation3D) -> Self","type":"method"}],"title":"Rotatable3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/rotatable3d\/rotated(by:)-34qpk","title":"func rotated(by: simd_quatd) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/rotatable3d","title":"Rotatable3D","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scalable2d\/scale(by:)","title":"func scale(by: Size2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/scalable2d\/scaleby(x:y:)","title":"func scaleBy(x: Double, y: Double)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/scalable2d\/scaled(by:)-8q9pm","title":"func scaled(by: Size2D) -> Self","type":"method"}],"title":"Scalable2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/scalable2d\/scaled(by:)-16mia","title":"func scaled(by: Size2D) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/scalable2d\/scaledby(x:y:)-32n3x","title":"func scaledBy(x: Double, y: Double) -> Self","type":"method"}],"title":"Scalable2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/scalable2d\/scaledby(x:y:)-7chcf","title":"func scaledBy(x: Double, y: Double) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/scalable2d\/uniformlyscale(by:)","title":"func uniformlyScale(by: Double)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/scalable2d\/uniformlyscaled(by:)-6ymj8","title":"func uniformlyScaled(by: Double) -> Self","type":"method"}],"title":"Scalable2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/scalable2d\/uniformlyscaled(by:)-7re2p","title":"func uniformlyScaled(by: Double) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/scalable2d","title":"Scalable2D","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scalable3d\/scale(by:)","title":"func scale(by: Size3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/scalable3d\/scaleby(x:y:z:)","title":"func scaleBy(x: Double, y: Double, z: Double)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/scalable3d\/scaled(by:)-8y9nc","title":"func scaled(by: Size3D) -> Self","type":"method"}],"title":"Scalable3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/scalable3d\/scaled(by:)-5t63","title":"func scaled(by: Size3D) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/scalable3d\/scaledby(x:y:z:)-44h72","title":"func scaledBy(x: Double, y: Double, z: Double) -> Self","type":"method"}],"title":"Scalable3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/scalable3d\/scaledby(x:y:z:)-8y1qw","title":"func scaledBy(x: Double, y: Double, z: Double) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/scalable3d\/uniformlyscale(by:)","title":"func uniformlyScale(by: Double)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/scalable3d\/uniformlyscaled(by:)-8irw4","title":"func uniformlyScaled(by: Double) -> Self","type":"method"}],"title":"Scalable3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/scalable3d\/uniformlyscaled(by:)-6hn78","title":"func uniformlyScaled(by: Double) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/scalable3d","title":"Scalable3D","type":"protocol"},{"path":"\/documentation\/swiftspatial\/shearable3d","title":"Shearable3D","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/translatable2d\/translate(by:)","title":"func translate(by: Vector2D)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/translatable2d\/translated(by:)-8bp5n","title":"func translated(by: Vector2D) -> Self","type":"method"}],"title":"Translatable2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/translatable2d\/translated(by:)-1zs8m","title":"func translated(by: Vector2D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/translatable2d","title":"Translatable2D","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/translatable3d\/translate(by:)","title":"func translate(by: Vector3D)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/translatable3d\/translated(by:)-xero","title":"func translated(by: Vector3D) -> Self","type":"method"}],"title":"Translatable3D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/translatable3d\/translated(by:)-18ksk","title":"func translated(by: Vector3D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/translatable3d","title":"Translatable3D","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/volumetric2d\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/volumetric2d\/contains(anyof:)","title":"func contains(anyOf: [Point2D]) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/volumetric2d\/contains(point:)","title":"func contains(point: Point2D) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/volumetric2d\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftspatial\/volumetric2d\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftspatial\/volumetric2d\/intersection(_:)","title":"func intersection(Self) -> Self?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/swiftspatial\/volumetric2d\/union(_:)-6p8jr","title":"func union(Self) -> Self","type":"method"}],"title":"Volumetric2D Implementations","type":"groupMarker"}],"path":"\/documentation\/swiftspatial\/volumetric2d\/union(_:)-3lynb","title":"func union(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/volumetric2d","title":"Volumetric2D","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/volumetric3d\/size","title":"var size: Size3D","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/volumetric3d\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/volumetric3d\/contains(anyof:)","title":"func contains(anyOf: [Point3D]) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/volumetric3d\/contains(point:)","title":"func contains(point: Point3D) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/volumetric3d\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftspatial\/volumetric3d\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftspatial\/volumetric3d\/intersection(_:)","title":"func intersection(Self) -> Self?","type":"method"},{"path":"\/documentation\/swiftspatial\/volumetric3d\/union(_:)","title":"func union(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/volumetric3d","title":"Volumetric3D","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/+(_:)-48y7j","title":"static func + (Angle2D) -> Angle2D","type":"op"},{"path":"\/documentation\/swiftspatial\/angle2d\/-(_:)","title":"static func - (Angle2D) -> Angle2D","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/angle2d\/init(degrees:)-927xa","title":"init<T>(degrees: T)","type":"init"},{"path":"\/documentation\/swiftspatial\/angle2d\/init(degrees:)-rzcc","title":"init(degrees: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/angle2d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/angle2d\/init(radians:)-6qyh1","title":"init<T>(radians: T)","type":"init"},{"path":"\/documentation\/swiftspatial\/angle2d\/init(radians:)-75ote","title":"init(radians: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/cos","title":"var cos: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/angle2d\/cosh","title":"var cosh: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/angle2d\/degrees","title":"var degrees: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/angle2d\/inverse","title":"var inverse: Angle2D","type":"property"},{"path":"\/documentation\/swiftspatial\/angle2d\/negated","title":"var negated: Angle2D","type":"property"},{"path":"\/documentation\/swiftspatial\/angle2d\/normalized","title":"var normalized: Angle2D","type":"property"},{"path":"\/documentation\/swiftspatial\/angle2d\/radians","title":"var radians: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/angle2d\/sin","title":"var sin: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/angle2d\/sinh","title":"var sinh: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/angle2d\/tan","title":"var tan: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/angle2d\/tanh","title":"var tanh: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/invert()","title":"func invert()","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/negate()","title":"func negate()","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/normalize()","title":"func normalize()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/acos(_:)","title":"static func acos(Double) -> Angle2D","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/acosh(_:)","title":"static func acosh(Double) -> Angle2D","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/asin(_:)","title":"static func asin(Double) -> Angle2D","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/asinh(_:)","title":"static func asinh(Double) -> Angle2D","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/atan(_:)","title":"static func atan(Double) -> Angle2D","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/atan2(y:x:)","title":"static func atan2(y: Double, x: Double) -> Angle2D","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/atanh(_:)","title":"static func atanh(Double) -> Angle2D","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/degrees(_:)","title":"static func degrees(Double) -> Angle2D","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/radians(_:)","title":"static func radians(Double) -> Angle2D","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/+(_:)-88rom","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/swiftspatial\/angle2d\/+(_:_:)","title":"static func + (Angle2D, Angle2D) -> Angle2D","type":"op"},{"path":"\/documentation\/swiftspatial\/angle2d\/+=(_:_:)-10x8o","title":"static func += (inout Angle2D, Angle2D)","type":"op"},{"path":"\/documentation\/swiftspatial\/angle2d\/+=(_:_:)-5fcdp","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/swiftspatial\/angle2d\/-(_:_:)","title":"static func - (Angle2D, Angle2D) -> Angle2D","type":"op"},{"path":"\/documentation\/swiftspatial\/angle2d\/-=(_:_:)-5b99p","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/swiftspatial\/angle2d\/-=(_:_:)-6gs5y","title":"static func -= (inout Angle2D, Angle2D)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)","title":"func isApproximatelyEqual<Magnitude>(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/zero-4xmv","title":"static let zero: Angle2D","type":"property"},{"path":"\/documentation\/swiftspatial\/angle2d\/zero-9z9qi","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/swiftspatial\/angle2d\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Angle2D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: Angle2D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/angle2d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/angle2d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/angle2d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/angle2d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/init(floatliteral:)","title":"init(floatLiteral: Double)","type":"init"}],"path":"\/documentation\/swiftspatial\/angle2d\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/init(integerliteral:)","title":"init(integerLiteral: Int64)","type":"init"}],"path":"\/documentation\/swiftspatial\/angle2d\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/angle2d\/flip(along:)","title":"func flip(along: Axis2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/flipped(along:)","title":"func flipped(along: Axis2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/rotate(by:)","title":"func rotate(by: Angle2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/angle2d\/rotated(by:)","title":"func rotated(by: Angle2D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/angle2d\/rotatable2d-implementations","title":"Rotatable2D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/angle2d","title":"Angle2D","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/*(_:_:)-3mocj","title":"static func * (Point2D, Double) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/*(_:_:)-79mfh","title":"static func * (Pose2D, Point2D) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/*(_:_:)-7n5xu","title":"static func * (Double, Point2D) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/*=(_:_:)","title":"static func *= (inout Point2D, Double)","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/+(_:)","title":"static func + (Point2D) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/+(_:_:)-607fd","title":"static func + (Size2D, Point2D) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/+(_:_:)-744ik","title":"static func + (Point2D, Size2D) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/+=(_:_:)-3sxdw","title":"static func += (inout Point2D, Vector2D)","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/+=(_:_:)-9v888","title":"static func += (inout Point2D, Size2D)","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/-(_:)","title":"static func - (Point2D) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/-(_:_:)-4k8au","title":"static func - (Size2D, Point2D) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/-(_:_:)-76ocl","title":"static func - (Point2D, Point2D) -> Vector2D","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/-(_:_:)-m8gc","title":"static func - (Point2D, Size2D) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/-=(_:_:)-503b8","title":"static func -= (inout Point2D, Vector2D)","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/-=(_:_:)-9qla3","title":"static func -= (inout Point2D, Size2D)","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/_(_:_:)","title":"static func \/ (Point2D, Double) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/point2d\/_=(_:_:)","title":"static func \/= (inout Point2D, Double)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/point2d\/init(_:)-27mfs","title":"init(Vector2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/point2d\/init(_:)-596d3","title":"init(SIMD2<Float>)","type":"init"},{"path":"\/documentation\/swiftspatial\/point2d\/init(_:)-5sgpa","title":"init(Size2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/point2d\/init(_:)-5u4lp","title":"init(PolarCoordinates2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/point2d\/init(_:)-7v838","title":"init(SIMD2<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/point2d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/point2d\/init(vector:)","title":"init(vector: SIMD2<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/point2d\/init(x:y:)-2meu3","title":"init(x: Double, y: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/point2d\/init(x:y:)-7g6pj","title":"init<T>(x: T, y: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/vector","title":"var vector: SIMD2<Double>","type":"property"},{"path":"\/documentation\/swiftspatial\/point2d\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/point2d\/y","title":"var y: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/distance(to:)","title":"func distance(to: Point2D) -> Double","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/rotate(by:around:)","title":"func rotate(by: Angle2D, around: Point2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/rotated(by:around:)","title":"func rotated(by: Angle2D, around: Point2D) -> Point2D","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Point2D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: Point2D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/point2d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/point2d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/point2d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/point2d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/init(arrayliteral:)","title":"init(arrayLiteral: Double...)","type":"init"}],"path":"\/documentation\/swiftspatial\/point2d\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/isfinite","title":"var isFinite: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/point2d\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/point2d\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/apply(_:)-5q8hc","title":"func apply(ScaledPose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/apply(_:)-96qu5","title":"func apply(Pose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/applying(_:)-9jqvr","title":"func applying(Pose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/applying(_:)-kdz8","title":"func applying(ScaledPose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/unapply(_:)-2d6le","title":"func unapply(Pose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/unapply(_:)-5wcig","title":"func unapply(ScaledPose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/unapplying(_:)-35fo6","title":"func unapplying(Pose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/unapplying(_:)-86ylp","title":"func unapplying(ScaledPose2D) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/infinity","title":"static let infinity: Point2D","type":"property"},{"path":"\/documentation\/swiftspatial\/point2d\/zero","title":"static let zero: Point2D","type":"property"}],"path":"\/documentation\/swiftspatial\/point2d\/primitive2d-implementations","title":"Primitive2D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/flip(along:)","title":"func flip(along: Axis2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/flipped(along:)","title":"func flipped(along: Axis2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/rotate(by:)","title":"func rotate(by: Angle2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/rotated(by:)","title":"func rotated(by: Angle2D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/point2d\/rotatable2d-implementations","title":"Rotatable2D Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/subscript(_:)","title":"subscript(Int) -> Double","type":"subscript"}],"path":"\/documentation\/swiftspatial\/point2d\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point2d\/translate(by:)","title":"func translate(by: Vector2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point2d\/translated(by:)","title":"func translated(by: Vector2D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/point2d\/translatable2d-implementations","title":"Translatable2D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/point2d","title":"Point2D","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/*(_:_:)-2yu3y","title":"static func * (Double, Point3D) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/*(_:_:)-4or88","title":"static func * (Point3D, Double) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/*(_:_:)-9wz2s","title":"static func * (Pose3D, Point3D) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/*=(_:_:)","title":"static func *= (inout Point3D, Double)","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/+(_:)","title":"static func + (Point3D) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/+(_:_:)-2gu5j","title":"static func + (Size3D, Point3D) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/+(_:_:)-93235","title":"static func + (Point3D, Size3D) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/+=(_:_:)-6wwnq","title":"static func += (inout Point3D, Size3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/+=(_:_:)-8dhur","title":"static func += (inout Point3D, Vector3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/-(_:)","title":"static func - (Point3D) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/-(_:_:)-4353o","title":"static func - (Point3D, Point3D) -> Vector3D","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/-(_:_:)-440sz","title":"static func - (Size3D, Point3D) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/-(_:_:)-8w6p2","title":"static func - (Point3D, Size3D) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/-=(_:_:)-3gf6o","title":"static func -= (inout Point3D, Vector3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/-=(_:_:)-4ka91","title":"static func -= (inout Point3D, Size3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/_(_:_:)","title":"static func \/ (Point3D, Double) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/point3d\/_=(_:_:)","title":"static func \/= (inout Point3D, Double)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/point3d\/init(_:)-20dqq","title":"init(Vector3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/point3d\/init(_:)-2br8i","title":"init(SIMD3<Float>)","type":"init"},{"path":"\/documentation\/swiftspatial\/point3d\/init(_:)-7g0w4","title":"init(Size3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/point3d\/init(_:)-8ruzi","title":"init(SIMD3<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/point3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/point3d\/init(vector:)","title":"init(vector: SIMD3<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/point3d\/init(x:y:z:)-5vkq4","title":"init(x: Double, y: Double, z: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/point3d\/init(x:y:z:)-6vyt9","title":"init<T>(x: T, y: T, z: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/vector","title":"var vector: SIMD3<Double>","type":"property"},{"path":"\/documentation\/swiftspatial\/point3d\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/point3d\/y","title":"var y: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/point3d\/z","title":"var z: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/distance(to:)","title":"func distance(to: Point3D) -> Double","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/rotate(by:around:)","title":"func rotate(by: simd_quatd, around: Point3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/rotated(by:around:)","title":"func rotated(by: simd_quatd, around: Point3D) -> Point3D","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Point3D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: Point3D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/point3d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/point3d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/point3d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/point3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/init(arrayliteral:)","title":"init(arrayLiteral: Double...)","type":"init"}],"path":"\/documentation\/swiftspatial\/point3d\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/isfinite","title":"var isFinite: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/point3d\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/point3d\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/apply(_:)-8ymq0","title":"func apply(Pose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/apply(_:)-92gvs","title":"func apply(ScaledPose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/applying(_:)-1ifkv","title":"func applying(Pose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/applying(_:)-48ys7","title":"func applying(ScaledPose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/unapply(_:)-2fajz","title":"func unapply(ScaledPose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/unapply(_:)-4kld7","title":"func unapply(Pose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/unapplying(_:)-5eopo","title":"func unapplying(Pose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/unapplying(_:)-7vgul","title":"func unapplying(ScaledPose3D) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/infinity","title":"static let infinity: Point3D","type":"property"},{"path":"\/documentation\/swiftspatial\/point3d\/zero","title":"static let zero: Point3D","type":"property"}],"path":"\/documentation\/swiftspatial\/point3d\/primitive3d-implementations","title":"Primitive3D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/rotate(by:)-1wclf","title":"func rotate(by: simd_quatd)","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/rotate(by:)-26ezt","title":"func rotate(by: Rotation3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/rotated(by:)","title":"func rotated(by: simd_quatd) -> Point3D","type":"method"}],"path":"\/documentation\/swiftspatial\/point3d\/rotatable3d-implementations","title":"Rotatable3D Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/subscript(_:)","title":"subscript(Int) -> Double","type":"subscript"}],"path":"\/documentation\/swiftspatial\/point3d\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/point3d\/translate(by:)","title":"func translate(by: Vector3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/point3d\/translated(by:)","title":"func translated(by: Vector3D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/point3d\/translatable3d-implementations","title":"Translatable3D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/point3d","title":"Point3D","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/init(_:)-19kpg","title":"init(Vector2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/init(_:)-4f81l","title":"init(Point2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/init(_:)-5cakc","title":"init(Size2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/init(angle:magnitude:)","title":"init(angle: Angle2D, magnitude: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/init(vector:)","title":"init(vector: SIMD2<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/init(x:y:)","title":"init(x: Double, y: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/angle","title":"var angle: Angle2D","type":"property"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/magnitude","title":"var magnitude: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: PolarCoordinates2D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: PolarCoordinates2D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/flip(along:)","title":"func flip(along: Axis2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/flipped(along:)","title":"func flipped(along: Axis2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/rotate(by:)","title":"func rotate(by: Angle2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/rotated(by:)","title":"func rotated(by: Angle2D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/rotatable2d-implementations","title":"Rotatable2D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/scale(by:)","title":"func scale(by: Size2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/scaleby(x:y:)","title":"func scaleBy(x: Double, y: Double)","type":"method"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/scaled(by:)","title":"func scaled(by: Size2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/scaledby(x:y:)","title":"func scaledBy(x: Double, y: Double) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/uniformlyscale(by:)","title":"func uniformlyScale(by: Double)","type":"method"},{"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/uniformlyscaled(by:)","title":"func uniformlyScaled(by: Double) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/polarcoordinates2d\/scalable2d-implementations","title":"Scalable2D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/polarcoordinates2d","title":"PolarCoordinates2D","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose2d\/*(_:_:)","title":"static func * (Pose2D, Pose2D) -> Pose2D","type":"op"},{"path":"\/documentation\/swiftspatial\/pose2d\/*=(_:_:)","title":"static func *= (inout Pose2D, Pose2D)","type":"op"},{"path":"\/documentation\/swiftspatial\/pose2d\/-(_:)","title":"static func - (Pose2D) -> Pose2D","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose2d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/pose2d\/init(_:)","title":"init(ScaledPose2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/pose2d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/pose2d\/init(position:angle:)-3r8qw","title":"init(position: Point2D, angle: Angle2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/pose2d\/init(position:angle:)-48uzh","title":"init(position: simd_double2, angle: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/pose2d\/init(position:angle:)-8idek","title":"init(position: simd_float2, angle: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/pose2d\/init(position:target:)","title":"init(position: Point2D, target: Point2D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose2d\/angle","title":"var angle: Angle2D","type":"property"},{"path":"\/documentation\/swiftspatial\/pose2d\/inverse","title":"var inverse: Pose2D","type":"property"},{"path":"\/documentation\/swiftspatial\/pose2d\/isidentity","title":"var isIdentity: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/pose2d\/position","title":"var position: Point2D","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose2d\/concatenating(_:)-47c4l","title":"func concatenating(Pose2D) -> Pose2D","type":"method"},{"path":"\/documentation\/swiftspatial\/pose2d\/concatenating(_:)-9va7o","title":"func concatenating(ScaledPose2D) -> ScaledPose2D","type":"method"},{"path":"\/documentation\/swiftspatial\/pose2d\/invert()","title":"func invert()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose2d\/identity","title":"static let identity: Pose2D","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose2d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Pose2D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/pose2d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: Pose2D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/pose2d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/pose2d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose2d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/pose2d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose2d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/pose2d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose2d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/pose2d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose2d\/flip(along:)","title":"func flip(along: Axis2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/pose2d\/flipped(along:)","title":"func flipped(along: Axis2D) -> Pose2D","type":"method"},{"path":"\/documentation\/swiftspatial\/pose2d\/rotate(by:)","title":"func rotate(by: Angle2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/pose2d\/rotated(by:)","title":"func rotated(by: Angle2D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/pose2d\/rotatable2d-implementations","title":"Rotatable2D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose2d\/translate(by:)","title":"func translate(by: Vector2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/pose2d\/translated(by:)","title":"func translated(by: Vector2D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/pose2d\/translatable2d-implementations","title":"Translatable2D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/pose2d","title":"Pose2D","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose3d\/*(_:_:)","title":"static func * (Pose3D, Pose3D) -> Pose3D","type":"op"},{"path":"\/documentation\/swiftspatial\/pose3d\/*=(_:_:)","title":"static func *= (inout Pose3D, Pose3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/pose3d\/-(_:)","title":"static func - (Pose3D) -> Pose3D","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose3d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/pose3d\/init(_:)-2nwvj","title":"init?(simd_double4x4)","type":"init"},{"path":"\/documentation\/swiftspatial\/pose3d\/init(_:)-5gufr","title":"init?(simd_float4x4)","type":"init"},{"path":"\/documentation\/swiftspatial\/pose3d\/init(_:)-8h2cw","title":"init(ScaledPose3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/pose3d\/init(forward:up:)","title":"init(forward: Vector3D, up: Vector3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/pose3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/pose3d\/init(position:rotation:)-3jw4s","title":"init(position: Point3D, rotation: Rotation3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/pose3d\/init(position:rotation:)-68jgv","title":"init(position: simd_double3, rotation: simd_quatd)","type":"init"},{"path":"\/documentation\/swiftspatial\/pose3d\/init(position:rotation:)-9g2z5","title":"init(position: simd_float3, rotation: simd_quatf)","type":"init"},{"path":"\/documentation\/swiftspatial\/pose3d\/init(position:target:up:)","title":"init(position: Point3D, target: Point3D, up: Vector3D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose3d\/inverse","title":"var inverse: Pose3D","type":"property"},{"path":"\/documentation\/swiftspatial\/pose3d\/isidentity","title":"var isIdentity: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/pose3d\/matrix","title":"var matrix: simd_double4x4","type":"property"},{"path":"\/documentation\/swiftspatial\/pose3d\/position","title":"var position: Point3D","type":"property"},{"path":"\/documentation\/swiftspatial\/pose3d\/rotation","title":"var rotation: Rotation3D","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose3d\/concatenating(_:)-1dqy1","title":"func concatenating(ScaledPose3D) -> ScaledPose3D","type":"method"},{"path":"\/documentation\/swiftspatial\/pose3d\/concatenating(_:)-7g0xz","title":"func concatenating(Pose3D) -> Pose3D","type":"method"},{"path":"\/documentation\/swiftspatial\/pose3d\/flip(along:)","title":"func flip(along: Axis3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/pose3d\/flipped(along:)","title":"func flipped(along: Axis3D) -> Pose3D","type":"method"},{"path":"\/documentation\/swiftspatial\/pose3d\/invert()","title":"func invert()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose3d\/identity","title":"static let identity: Pose3D","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose3d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Pose3D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/pose3d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: Pose3D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/pose3d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/pose3d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose3d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/pose3d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose3d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/pose3d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/pose3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose3d\/rotate(by:)-108oh","title":"func rotate(by: Rotation3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/pose3d\/rotate(by:)-9ozdt","title":"func rotate(by: simd_quatd)","type":"method"},{"path":"\/documentation\/swiftspatial\/pose3d\/rotated(by:)-8g090","title":"func rotated(by: simd_quatd) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/pose3d\/rotated(by:)-zaq1","title":"func rotated(by: Rotation3D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/pose3d\/rotatable3d-implementations","title":"Rotatable3D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/pose3d\/translate(by:)","title":"func translate(by: Vector3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/pose3d\/translated(by:)","title":"func translated(by: Vector3D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/pose3d\/translatable3d-implementations","title":"Translatable3D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/pose3d","title":"Pose3D","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/ray3d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/ray3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/ray3d\/init(origin:direction:)-1hku3","title":"init(origin: Point3D, direction: Vector3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/ray3d\/init(origin:direction:)-5kqqx","title":"init(origin: SIMD3<Double>, direction: SIMD3<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/ray3d\/init(origin:direction:)-8wrrp","title":"init(origin: SIMD3<Float>, direction: SIMD3<Float>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/ray3d\/direction","title":"var direction: Vector3D","type":"property"},{"path":"\/documentation\/swiftspatial\/ray3d\/origin","title":"var origin: Point3D","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/ray3d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Ray3D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: Ray3D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/ray3d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/ray3d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/ray3d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/ray3d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/ray3d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/ray3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/ray3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/ray3d\/isfinite","title":"var isFinite: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/ray3d\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/ray3d\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/ray3d\/apply(_:)-3kote","title":"func apply(Pose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/apply(_:)-5eafx","title":"func apply(ScaledPose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/applying(_:)-h3ag","title":"func applying(ScaledPose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/applying(_:)-pl9v","title":"func applying(Pose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/unapply(_:)-8j3s0","title":"func unapply(Pose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/unapply(_:)-8pcf6","title":"func unapply(ScaledPose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/unapplying(_:)-1qnqn","title":"func unapplying(ScaledPose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/unapplying(_:)-538z3","title":"func unapplying(Pose3D) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/ray3d\/infinity","title":"static let infinity: Ray3D","type":"property"},{"path":"\/documentation\/swiftspatial\/ray3d\/zero","title":"static let zero: Ray3D","type":"property"}],"path":"\/documentation\/swiftspatial\/ray3d\/primitive3d-implementations","title":"Primitive3D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/ray3d\/rotate(by:)-7m249","title":"func rotate(by: Rotation3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/rotate(by:)-7yndf","title":"func rotate(by: simd_quatd)","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/rotated(by:)-3x5e4","title":"func rotated(by: Rotation3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/rotated(by:)-758pl","title":"func rotated(by: simd_quatd) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/ray3d\/rotatable3d-implementations","title":"Rotatable3D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/ray3d\/translate(by:)","title":"func translate(by: Vector3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/ray3d\/translated(by:)","title":"func translated(by: Vector3D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/ray3d\/translatable3d-implementations","title":"Translatable3D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/ray3d","title":"Ray3D","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/init(angles:order:)-3e715","title":"init(angles: SIMD3<Float>, order: Rotation3D.EulerAngles.Order)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/init(angles:order:)-659gv","title":"init(angles: SIMD3<Double>, order: Rotation3D.EulerAngles.Order)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/init(x:y:z:order:)","title":"init(x: Angle2D, y: Angle2D, z: Angle2D, order: Rotation3D.EulerAngles.Order)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/angles","title":"var angles: SIMD3<Double>","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/order-swift.property","title":"var order: Rotation3D.EulerAngles.Order","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/order-swift.enum\/xyz","title":"case xyz","type":"case"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/order-swift.enum\/zxy","title":"case zxy","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/order-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/order-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/order-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/order-swift.enum","title":"Rotation3D.EulerAngles.Order","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles","title":"Rotation3D.EulerAngles","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/*(_:_:)-46jpr","title":"static func * (Double, Rotation3D) -> Rotation3D","type":"op"},{"path":"\/documentation\/swiftspatial\/rotation3d\/*(_:_:)-5bpjk","title":"static func * (Rotation3D, Rotation3D) -> Rotation3D","type":"op"},{"path":"\/documentation\/swiftspatial\/rotation3d\/*(_:_:)-703p1","title":"static func * (Rotation3D, Double) -> Rotation3D","type":"op"},{"path":"\/documentation\/swiftspatial\/rotation3d\/*(_:_:)-80cni","title":"static func * <T>(Rotation3D, T) -> T","type":"op"},{"path":"\/documentation\/swiftspatial\/rotation3d\/*=(_:_:)","title":"static func *= (inout Rotation3D, Rotation3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/rotation3d\/-(_:)","title":"static func - (Rotation3D) -> Rotation3D","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/init(_:)-5qpad","title":"init(simd_quatd)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/init(_:)-8o8bk","title":"init(simd_quatf)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/init(angle:axis:)","title":"init(angle: Angle2D, axis: RotationAxis3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/init(eulerangles:)","title":"init(eulerAngles: Rotation3D.EulerAngles)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/init(forward:)","title":"init(forward: Vector3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/init(forward:up:)","title":"init(forward: Vector3D, up: Vector3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/init(position:target:up:)","title":"init(position: Point3D, target: Point3D, up: Vector3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotation3d\/init(quaternion:)","title":"init(quaternion: simd_quatd)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/angle","title":"var angle: Angle2D","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/axis","title":"var axis: RotationAxis3D","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/inverse","title":"var inverse: Rotation3D","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/isidentity","title":"var isIdentity: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/matrix","title":"var matrix: simd_double4x4","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/normalized","title":"var normalized: Rotation3D","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/quaternion","title":"var quaternion: simd_quatd","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/valid","title":"var valid: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/vector","title":"var vector: simd_double4","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/w","title":"var w: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/y","title":"var y: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/rotation3d\/z","title":"var z: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/dot(_:)","title":"func dot(Rotation3D) -> Double","type":"method"},{"path":"\/documentation\/swiftspatial\/rotation3d\/eulerangles(order:)","title":"func eulerAngles(order: Rotation3D.EulerAngles.Order) -> Rotation3D.EulerAngles","type":"method"},{"path":"\/documentation\/swiftspatial\/rotation3d\/invert()","title":"func invert()","type":"method"},{"path":"\/documentation\/swiftspatial\/rotation3d\/normalize()","title":"func normalize()","type":"method"},{"path":"\/documentation\/swiftspatial\/rotation3d\/swing(twistaxis:)","title":"func swing(twistAxis: RotationAxis3D) -> Rotation3D","type":"method"},{"path":"\/documentation\/swiftspatial\/rotation3d\/swingtwist(twistaxis:)","title":"func swingTwist(twistAxis: RotationAxis3D) -> (swing: Rotation3D, twist: Rotation3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/rotation3d\/twist(twistaxis:)","title":"func twist(twistAxis: RotationAxis3D) -> Rotation3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/identity","title":"static let identity: Rotation3D","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/slerp(from:to:t:along:)","title":"static func slerp(from: Rotation3D, to: Rotation3D, t: Double, along: Rotation3D.SlerpPath) -> Rotation3D","type":"method"},{"path":"\/documentation\/swiftspatial\/rotation3d\/spline(leftendpoint:from:to:rightendpoint:t:)","title":"static func spline(leftEndpoint: Rotation3D, from: Rotation3D, to: Rotation3D, rightEndpoint: Rotation3D, t: Double) -> Rotation3D","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/slerppath\/automatic","title":"case automatic","type":"case"},{"path":"\/documentation\/swiftspatial\/rotation3d\/slerppath\/longest","title":"case longest","type":"case"},{"path":"\/documentation\/swiftspatial\/rotation3d\/slerppath\/shortest","title":"case shortest","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/slerppath\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/slerppath\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/rotation3d\/slerppath\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/rotation3d\/slerppath","title":"Rotation3D.SlerpPath","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Rotation3D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/rotation3d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: Rotation3D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/rotation3d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/rotation3d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/rotation3d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/rotation3d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/rotation3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/init(arrayliteral:)","title":"init(arrayLiteral: Double...)","type":"init"}],"path":"\/documentation\/swiftspatial\/rotation3d\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/rotate(by:)-7n8w4","title":"func rotate(by: simd_quatd)","type":"method"},{"path":"\/documentation\/swiftspatial\/rotation3d\/rotate(by:)-wv3j","title":"func rotate(by: Rotation3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/rotation3d\/rotated(by:)-1gvpg","title":"func rotated(by: simd_quatd) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/rotation3d\/rotated(by:)-q10j","title":"func rotated(by: Rotation3D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/rotation3d\/rotatable3d-implementations","title":"Rotatable3D Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotation3d\/subscript(_:)","title":"subscript(Int) -> Double","type":"subscript"}],"path":"\/documentation\/swiftspatial\/rotation3d\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/rotation3d","title":"Rotation3D","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/init(_:)-4clt6","title":"init(SIMD3<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/init(_:)-6al18","title":"init(Vector3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/init(_:)-794mt","title":"init(SIMD3<Float>)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/init(vector:)","title":"init(vector: SIMD3<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/init(x:y:z:)-42p7z","title":"init<T>(x: T, y: T, z: T)","type":"init"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/init(x:y:z:)-5215v","title":"init(x: Double, y: Double, z: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/vector","title":"var vector: SIMD3<Double>","type":"property"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/x-swift.property","title":"var x: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/y-swift.property","title":"var y: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/z-swift.property","title":"var z: Double","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/x-swift.type.property","title":"static let x: RotationAxis3D","type":"property"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/xy","title":"static let xy: RotationAxis3D","type":"property"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/xyz","title":"static let xyz: RotationAxis3D","type":"property"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/xz","title":"static let xz: RotationAxis3D","type":"property"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/y-swift.type.property","title":"static let y: RotationAxis3D","type":"property"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/yz","title":"static let yz: RotationAxis3D","type":"property"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/z-swift.type.property","title":"static let z: RotationAxis3D","type":"property"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/zero","title":"static let zero: RotationAxis3D","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: RotationAxis3D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: RotationAxis3D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/rotationaxis3d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/rotationaxis3d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/rotationaxis3d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/rotationaxis3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/init(arrayliteral:)","title":"init(arrayLiteral: Double...)","type":"init"}],"path":"\/documentation\/swiftspatial\/rotationaxis3d\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/rotationaxis3d\/subscript(_:)","title":"subscript(Int) -> Double","type":"subscript"}],"path":"\/documentation\/swiftspatial\/rotationaxis3d\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/rotationaxis3d","title":"RotationAxis3D","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/*(_:_:)","title":"static func * (ScaledPose2D, ScaledPose2D) -> ScaledPose2D","type":"op"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/*=(_:_:)","title":"static func *= (inout ScaledPose2D, ScaledPose2D)","type":"op"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/-(_:)","title":"static func - (ScaledPose2D) -> ScaledPose2D","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/init(_:)","title":"init(Pose2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/init(position:angle:scale:)-3qa6f","title":"init(position: simd_double2, angle: Double, scale: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/init(position:angle:scale:)-4xact","title":"init(position: Point2D, angle: Angle2D, scale: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/init(position:angle:scale:)-54ku9","title":"init(position: simd_float2, angle: Double, scale: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/init(position:target:scale:)","title":"init(position: Point2D, target: Point2D, scale: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/angle","title":"var angle: Angle2D","type":"property"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/inverse","title":"var inverse: ScaledPose2D","type":"property"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/isidentity","title":"var isIdentity: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/position","title":"var position: Point2D","type":"property"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/scale","title":"var scale: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/concatenating(_:)-2t4se","title":"func concatenating(Pose2D) -> ScaledPose2D","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/concatenating(_:)-8nbp9","title":"func concatenating(ScaledPose2D) -> ScaledPose2D","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/invert()","title":"func invert()","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/uniformlyscale(by:)","title":"func uniformlyScale(by: Double)","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/uniformlyscaled(by:)","title":"func uniformlyScaled(by: Double) -> ScaledPose2D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/identity","title":"static let identity: Pose2D","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: ScaledPose2D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: ScaledPose2D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/scaledpose2d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/scaledpose2d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/scaledpose2d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/scaledpose2d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/flip(along:)","title":"func flip(along: Axis2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/flipped(along:)","title":"func flipped(along: Axis2D) -> ScaledPose2D","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/rotate(by:)","title":"func rotate(by: Angle2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/rotated(by:)","title":"func rotated(by: Angle2D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/scaledpose2d\/rotatable2d-implementations","title":"Rotatable2D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/translate(by:)","title":"func translate(by: Vector2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose2d\/translated(by:)","title":"func translated(by: Vector2D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/scaledpose2d\/translatable2d-implementations","title":"Translatable2D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/scaledpose2d","title":"ScaledPose2D","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/*(_:_:)","title":"static func * (ScaledPose3D, ScaledPose3D) -> ScaledPose3D","type":"op"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/*=(_:_:)","title":"static func *= (inout ScaledPose3D, ScaledPose3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/-(_:)","title":"static func - (ScaledPose3D) -> ScaledPose3D","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/init(_:)-3ftj7","title":"init?(simd_float4x4)","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/init(_:)-8fxft","title":"init?(simd_double4x4)","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/init(_:)-8pv7a","title":"init(Pose3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/init(forward:scale:up:)","title":"init(forward: Vector3D, scale: Double, up: Vector3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/init(position:rotation:scale:)-1l8lf","title":"init(position: simd_float3, rotation: simd_quatf, scale: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/init(position:rotation:scale:)-1zctn","title":"init(position: Point3D, rotation: Rotation3D, scale: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/init(position:rotation:scale:)-7wau5","title":"init(position: simd_double3, rotation: simd_quatd, scale: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/init(position:target:scale:up:)","title":"init(position: Point3D, target: Point3D, scale: Double, up: Vector3D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/inverse","title":"var inverse: ScaledPose3D","type":"property"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/isidentity","title":"var isIdentity: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/matrix","title":"var matrix: simd_double4x4","type":"property"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/position","title":"var position: Point3D","type":"property"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/rotation","title":"var rotation: Rotation3D","type":"property"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/scale","title":"var scale: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/concatenating(_:)-2dsfj","title":"func concatenating(ScaledPose3D) -> ScaledPose3D","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/concatenating(_:)-377ys","title":"func concatenating(Pose3D) -> ScaledPose3D","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/flip(along:)","title":"func flip(along: Axis3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/flipped(along:)","title":"func flipped(along: Axis3D) -> ScaledPose3D","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/invert()","title":"func invert()","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/uniformlyscale(by:)","title":"func uniformlyScale(by: Double)","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/uniformlyscaled(by:)","title":"func uniformlyScaled(by: Double) -> ScaledPose3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/identity","title":"static let identity: Pose3D","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: ScaledPose3D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: ScaledPose3D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/scaledpose3d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/scaledpose3d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/scaledpose3d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/scaledpose3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/rotate(by:)-5r6ir","title":"func rotate(by: simd_quatd)","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/rotate(by:)-7lh39","title":"func rotate(by: Rotation3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/rotated(by:)-4qqw1","title":"func rotated(by: Rotation3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/rotated(by:)-99gry","title":"func rotated(by: simd_quatd) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/scaledpose3d\/rotatable3d-implementations","title":"Rotatable3D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/translate(by:)","title":"func translate(by: Vector3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/scaledpose3d\/translated(by:)","title":"func translated(by: Vector3D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/scaledpose3d\/translatable3d-implementations","title":"Translatable3D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/scaledpose3d","title":"ScaledPose3D","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/*(_:_:)-3lhu3","title":"static func * (Size2D, Double) -> Size2D","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/*(_:_:)-7ls7h","title":"static func * (Double, Size2D) -> Size2D","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/*(_:_:)-w4ti","title":"static func * (Pose2D, Size2D) -> Size2D","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/*=(_:_:)","title":"static func *= (inout Size2D, Double)","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/+(_:)-5ja00","title":"static func + (Size2D) -> Size2D","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/+=(_:_:)-91paw","title":"static func += (inout Size2D, Vector2D)","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/-(_:)","title":"static func - (Size2D) -> Size2D","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/-=(_:_:)-83p7s","title":"static func -= (inout Size2D, Vector2D)","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/_(_:_:)","title":"static func \/ (Size2D, Double) -> Size2D","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/_=(_:_:)","title":"static func \/= (inout Size2D, Double)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/size2d\/init(_:)-1zanr","title":"init(Vector2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/size2d\/init(_:)-22acu","title":"init(Point2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/size2d\/init(_:)-22aws","title":"init(SIMD2<Float>)","type":"init"},{"path":"\/documentation\/swiftspatial\/size2d\/init(_:)-7vwhf","title":"init(SIMD2<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/size2d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/size2d\/init(vector:)","title":"init(vector: SIMD2<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/size2d\/init(width:height:)-1nw79","title":"init(width: Double, height: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/size2d\/init(width:height:)-2sj9t","title":"init<T>(width: T, height: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/height","title":"var height: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/size2d\/vector","title":"var vector: SIMD2<Double>","type":"property"},{"path":"\/documentation\/swiftspatial\/size2d\/width","title":"var width: Double","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/one","title":"static let one: Size2D","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/+(_:)-3qmb2","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/+(_:_:)","title":"static func + (Size2D, Size2D) -> Size2D","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/+=(_:_:)-36he3","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/+=(_:_:)-8d0mb","title":"static func += (inout Size2D, Size2D)","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/-(_:_:)","title":"static func - (Size2D, Size2D) -> Size2D","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/-=(_:_:)-5r3qe","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/swiftspatial\/size2d\/-=(_:_:)-70zrq","title":"static func -= (inout Size2D, Size2D)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)","title":"func isApproximatelyEqual<Magnitude>(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/zero","title":"static let zero: Size2D","type":"property"}],"path":"\/documentation\/swiftspatial\/size2d\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Size2D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: Size2D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/size2d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/size2d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/size2d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/size2d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/init(arrayliteral:)","title":"init(arrayLiteral: Double...)","type":"init"}],"path":"\/documentation\/swiftspatial\/size2d\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/isfinite","title":"var isFinite: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/size2d\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/size2d\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/apply(_:)-7nycj","title":"func apply(Pose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/apply(_:)-9mddq","title":"func apply(ScaledPose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/applying(_:)-2niid","title":"func applying(ScaledPose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/applying(_:)-8ah0d","title":"func applying(Pose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/unapply(_:)-1k4oz","title":"func unapply(Pose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/unapply(_:)-cuo","title":"func unapply(ScaledPose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/unapplying(_:)-4dyu","title":"func unapplying(ScaledPose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/unapplying(_:)-75t1h","title":"func unapplying(Pose2D) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/infinity","title":"static let infinity: Size2D","type":"property"}],"path":"\/documentation\/swiftspatial\/size2d\/primitive2d-implementations","title":"Primitive2D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/flip(along:)","title":"func flip(along: Axis2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/flipped(along:)","title":"func flipped(along: Axis2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/rotate(by:)","title":"func rotate(by: Angle2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/rotated(by:)","title":"func rotated(by: Angle2D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/size2d\/rotatable2d-implementations","title":"Rotatable2D Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/subscript(_:)","title":"subscript(Int) -> Double","type":"subscript"}],"path":"\/documentation\/swiftspatial\/size2d\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/scale(by:)","title":"func scale(by: Size2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/scaleby(x:y:)","title":"func scaleBy(x: Double, y: Double)","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/scaled(by:)","title":"func scaled(by: Size2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/scaledby(x:y:)","title":"func scaledBy(x: Double, y: Double) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/uniformlyscale(by:)","title":"func uniformlyScale(by: Double)","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/uniformlyscaled(by:)","title":"func uniformlyScaled(by: Double) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/size2d\/scalable2d-implementations","title":"Scalable2D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size2d\/contains(_:)","title":"func contains(Size2D) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/contains(anyof:)","title":"func contains(anyOf: [Point2D]) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/contains(point:)","title":"func contains(point: Point2D) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/formintersection(_:)","title":"func formIntersection(Size2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/formunion(_:)","title":"func formUnion(Size2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/intersection(_:)","title":"func intersection(Size2D) -> Size2D?","type":"method"},{"path":"\/documentation\/swiftspatial\/size2d\/union(_:)","title":"func union(Size2D) -> Size2D","type":"method"}],"path":"\/documentation\/swiftspatial\/size2d\/volumetric2d-implementations","title":"Volumetric2D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/size2d","title":"Size2D","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/*(_:_:)-111l0","title":"static func * (Pose3D, Size3D) -> Size3D","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/*(_:_:)-20xk7","title":"static func * (Double, Size3D) -> Size3D","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/*(_:_:)-785ms","title":"static func * (Size3D, Double) -> Size3D","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/*=(_:_:)","title":"static func *= (inout Size3D, Double)","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/+(_:)-8e05q","title":"static func + (Size3D) -> Size3D","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/+=(_:_:)-6itxk","title":"static func += (inout Size3D, Vector3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/-(_:)","title":"static func - (Size3D) -> Size3D","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/-=(_:_:)-134uf","title":"static func -= (inout Size3D, Vector3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/_(_:_:)","title":"static func \/ (Size3D, Double) -> Size3D","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/_=(_:_:)","title":"static func \/= (inout Size3D, Double)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/size3d\/init(_:)-59jkg","title":"init(SIMD3<Float>)","type":"init"},{"path":"\/documentation\/swiftspatial\/size3d\/init(_:)-9eig3","title":"init(Vector3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/size3d\/init(_:)-9ncc5","title":"init(SIMD3<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/size3d\/init(_:)-qfzd","title":"init(Point3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/size3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/size3d\/init(vector:)","title":"init(vector: SIMD3<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/size3d\/init(width:height:depth:)-2d211","title":"init<T>(width: T, height: T, depth: T)","type":"init"},{"path":"\/documentation\/swiftspatial\/size3d\/init(width:height:depth:)-3stbb","title":"init(width: Double, height: Double, depth: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/depth","title":"var depth: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/size3d\/height","title":"var height: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/size3d\/vector","title":"var vector: SIMD3<Double>","type":"property"},{"path":"\/documentation\/swiftspatial\/size3d\/width","title":"var width: Double","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/one","title":"static let one: Size3D","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/+(_:)-3o66p","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/+(_:_:)","title":"static func + (Size3D, Size3D) -> Size3D","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/+=(_:_:)-3b2h0","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/+=(_:_:)-71t33","title":"static func += (inout Size3D, Size3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/-(_:_:)","title":"static func - (Size3D, Size3D) -> Size3D","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/-=(_:_:)-3uvfl","title":"static func -= (inout Size3D, Size3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/size3d\/-=(_:_:)-5nmdh","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)","title":"func isApproximatelyEqual<Magnitude>(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/zero","title":"static let zero: Size3D","type":"property"}],"path":"\/documentation\/swiftspatial\/size3d\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Size3D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: Size3D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/size3d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/size3d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/size3d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/size3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/init(arrayliteral:)","title":"init(arrayLiteral: Double...)","type":"init"}],"path":"\/documentation\/swiftspatial\/size3d\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/isfinite","title":"var isFinite: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/size3d\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/size3d\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/apply(_:)-1rf4r","title":"func apply(Pose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/apply(_:)-8v0zt","title":"func apply(ScaledPose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/applying(_:)-6cxws","title":"func applying(Pose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/applying(_:)-81f6q","title":"func applying(ScaledPose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/unapply(_:)-7p8pq","title":"func unapply(ScaledPose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/unapply(_:)-kaww","title":"func unapply(Pose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/unapplying(_:)-2shtt","title":"func unapplying(Pose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/unapplying(_:)-5kt4i","title":"func unapplying(ScaledPose3D) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/infinity","title":"static let infinity: Size3D","type":"property"}],"path":"\/documentation\/swiftspatial\/size3d\/primitive3d-implementations","title":"Primitive3D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/rotate(by:)-22i7s","title":"func rotate(by: Rotation3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/rotate(by:)-77pn4","title":"func rotate(by: simd_quatd)","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/rotated(by:)-op78","title":"func rotated(by: simd_quatd) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/rotated(by:)-zm3j","title":"func rotated(by: Rotation3D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/size3d\/rotatable3d-implementations","title":"Rotatable3D Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/subscript(_:)","title":"subscript(Int) -> Double","type":"subscript"}],"path":"\/documentation\/swiftspatial\/size3d\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/scale(by:)","title":"func scale(by: Size3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/scaleby(x:y:z:)","title":"func scaleBy(x: Double, y: Double, z: Double)","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/scaled(by:)","title":"func scaled(by: Size3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/scaledby(x:y:z:)","title":"func scaledBy(x: Double, y: Double, z: Double) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/uniformlyscale(by:)","title":"func uniformlyScale(by: Double)","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/uniformlyscaled(by:)","title":"func uniformlyScaled(by: Double) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/size3d\/scalable3d-implementations","title":"Scalable3D Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/size","title":"var size: Size3D","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/size3d\/contains(_:)","title":"func contains(Size3D) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/contains(anyof:)","title":"func contains(anyOf: [Point3D]) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/contains(point:)","title":"func contains(point: Point3D) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/formintersection(_:)","title":"func formIntersection(Size3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/formunion(_:)","title":"func formUnion(Size3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/intersection(_:)","title":"func intersection(Size3D) -> Size3D?","type":"method"},{"path":"\/documentation\/swiftspatial\/size3d\/union(_:)","title":"func union(Size3D) -> Size3D","type":"method"}],"path":"\/documentation\/swiftspatial\/size3d\/volumetric3d-implementations","title":"Volumetric3D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/size3d","title":"Size3D","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/init(_:)-3bhyu","title":"init(Point3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/init(_:)-3c9u3","title":"init(SIMD3<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/init(_:)-8wskq","title":"init(Vector3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/init(radius:inclination:azimuth:)","title":"init(radius: Double, inclination: Angle2D, azimuth: Angle2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/init(vector:)","title":"init(vector: SIMD3<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/init(x:y:z:)","title":"init(x: Double, y: Double, z: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/azimuth","title":"var azimuth: Angle2D","type":"property"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/inclination","title":"var inclination: Angle2D","type":"property"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/radius","title":"var radius: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/vector","title":"var vector: simd_double3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: SphericalCoordinates3D, tolerance: Double) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/zero","title":"static let zero: SphericalCoordinates3D","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/sphericalcoordinates3d","title":"SphericalCoordinates3D","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/*(_:_:)-3fhrq","title":"static func * (Pose2D, Vector2D) -> Vector2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/*(_:_:)-8npwu","title":"static func * (Vector2D, Double) -> Vector2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/*(_:_:)-9m5sm","title":"static func * (Double, Vector2D) -> Vector2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/*=(_:_:)","title":"static func *= (inout Vector2D, Double)","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/+(_:)-909mr","title":"static func + (Vector2D) -> Vector2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/+(_:_:)-2zftp","title":"static func + (Size2D, Vector2D) -> Size2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/+(_:_:)-3d6w7","title":"static func + (Point2D, Vector2D) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/+(_:_:)-3mrft","title":"static func + (Vector2D, Point2D) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/+(_:_:)-4ggq5","title":"static func + (Vector2D, Size2D) -> Size2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/-(_:)","title":"static func - (Vector2D) -> Vector2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/-(_:_:)-4d79p","title":"static func - (Vector2D, Point2D) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/-(_:_:)-4ziq3","title":"static func - (Point2D, Vector2D) -> Point2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/-(_:_:)-56rko","title":"static func - (Vector2D, Size2D) -> Size2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/-(_:_:)-6ijvd","title":"static func - (Size2D, Vector2D) -> Size2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/_(_:_:)","title":"static func \/ (Vector2D, Double) -> Vector2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/_=(_:_:)","title":"static func \/= (inout Vector2D, Double)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/vector2d\/init(_:)-25g6h","title":"init(Size2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector2d\/init(_:)-4ne4s","title":"init(SIMD2<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector2d\/init(_:)-54tde","title":"init(Angle2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector2d\/init(_:)-5u1tr","title":"init(SIMD2<Float>)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector2d\/init(_:)-6acn7","title":"init(PolarCoordinates2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector2d\/init(_:)-ocyg","title":"init(Point2D)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector2d\/init(angle:length:)","title":"init(angle: Angle2D, length: Double)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector2d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/vector2d\/init(vector:)","title":"init(vector: SIMD2<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector2d\/init(x:y:)-4m045","title":"init<T>(x: T, y: T)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector2d\/init(x:y:)-5ymh2","title":"init(x: Double, y: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/angle","title":"var angle: Angle2D","type":"property"},{"path":"\/documentation\/swiftspatial\/vector2d\/length","title":"var length: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/vector2d\/lengthsquared","title":"var lengthSquared: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/vector2d\/normalized","title":"var normalized: Vector2D","type":"property"},{"path":"\/documentation\/swiftspatial\/vector2d\/vector","title":"var vector: SIMD2<Double>","type":"property"},{"path":"\/documentation\/swiftspatial\/vector2d\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/vector2d\/y","title":"var y: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/dot(_:)","title":"func dot(Vector2D) -> Double","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/normalize()","title":"func normalize()","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/projected(_:)","title":"func projected(Vector2D) -> Vector2D","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/reflected(_:)","title":"func reflected(Vector2D) -> Vector2D","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/rotation(to:)","title":"func rotation(to: Vector2D) -> Angle2D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/right","title":"static let right: Vector2D","type":"property"},{"path":"\/documentation\/swiftspatial\/vector2d\/up","title":"static let up: Vector2D","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/+(_:)-9dzcg","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/+(_:_:)-8kp6d","title":"static func + (Vector2D, Vector2D) -> Vector2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/+=(_:_:)-1q3vr","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/+=(_:_:)-4l6g0","title":"static func += (inout Vector2D, Vector2D)","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/-(_:_:)-92fhb","title":"static func - (Vector2D, Vector2D) -> Vector2D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/-=(_:_:)-5krs5","title":"static func -= (inout Vector2D, Vector2D)","type":"op"},{"path":"\/documentation\/swiftspatial\/vector2d\/-=(_:_:)-740b7","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)","title":"func isApproximatelyEqual<Magnitude>(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/zero","title":"static let zero: Vector2D","type":"property"}],"path":"\/documentation\/swiftspatial\/vector2d\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Vector2D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: Vector2D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/vector2d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/vector2d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/vector2d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/vector2d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/init(arrayliteral:)","title":"init(arrayLiteral: Double...)","type":"init"}],"path":"\/documentation\/swiftspatial\/vector2d\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/isfinite","title":"var isFinite: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/vector2d\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/vector2d\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/apply(_:)-3l87n","title":"func apply(Pose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/apply(_:)-7kj0","title":"func apply(ScaledPose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/applying(_:)-1nw5i","title":"func applying(ScaledPose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/applying(_:)-6wp4p","title":"func applying(Pose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/unapply(_:)-3iazh","title":"func unapply(Pose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/unapply(_:)-iggg","title":"func unapply(ScaledPose2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/unapplying(_:)-2hiu9","title":"func unapplying(ScaledPose2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/unapplying(_:)-8dy97","title":"func unapplying(Pose2D) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/infinity","title":"static let infinity: Vector2D","type":"property"}],"path":"\/documentation\/swiftspatial\/vector2d\/primitive2d-implementations","title":"Primitive2D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/flip(along:)","title":"func flip(along: Axis2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/flipped(along:)","title":"func flipped(along: Axis2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/rotate(by:)","title":"func rotate(by: Angle2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/rotated(by:)","title":"func rotated(by: Angle2D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/vector2d\/rotatable2d-implementations","title":"Rotatable2D Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/subscript(_:)","title":"subscript(Int) -> Double","type":"subscript"}],"path":"\/documentation\/swiftspatial\/vector2d\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector2d\/scale(by:)","title":"func scale(by: Size2D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/scaleby(x:y:)","title":"func scaleBy(x: Double, y: Double)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/scaled(by:)","title":"func scaled(by: Size2D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/scaledby(x:y:)","title":"func scaledBy(x: Double, y: Double) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/uniformlyscale(by:)","title":"func uniformlyScale(by: Double)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector2d\/uniformlyscaled(by:)","title":"func uniformlyScaled(by: Double) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/vector2d\/scalable2d-implementations","title":"Scalable2D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/vector2d","title":"Vector2D","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/*(_:_:)-3d9b8","title":"static func * (Vector3D, Double) -> Vector3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/*(_:_:)-4yd4f","title":"static func * (Pose3D, Vector3D) -> Vector3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/*(_:_:)-8idoz","title":"static func * (Double, Vector3D) -> Vector3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/*=(_:_:)","title":"static func *= (inout Vector3D, Double)","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/+(_:)-9h0tj","title":"static func + (Vector3D) -> Vector3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/+(_:_:)-3oc1z","title":"static func + (Size3D, Vector3D) -> Size3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/+(_:_:)-4a5aq","title":"static func + (Vector3D, Point3D) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/+(_:_:)-9pj32","title":"static func + (Vector3D, Size3D) -> Size3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/+(_:_:)-9syv0","title":"static func + (Point3D, Vector3D) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/-(_:)","title":"static func - (Vector3D) -> Vector3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/-(_:_:)-2plx7","title":"static func - (Vector3D, Size3D) -> Size3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/-(_:_:)-5qp77","title":"static func - (Size3D, Vector3D) -> Size3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/-(_:_:)-7ascg","title":"static func - (Point3D, Vector3D) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/-(_:_:)-p2dq","title":"static func - (Vector3D, Point3D) -> Point3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/_(_:_:)","title":"static func \/ (Vector3D, Double) -> Vector3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/_=(_:_:)","title":"static func \/= (inout Vector3D, Double)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftspatial\/vector3d\/init(_:)-2jp2o","title":"init(SIMD3<Float>)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector3d\/init(_:)-64uej","title":"init(SIMD3<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector3d\/init(_:)-8e6re","title":"init(Size3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector3d\/init(_:)-8ez4q","title":"init(RotationAxis3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector3d\/init(_:)-8fvfi","title":"init(Point3D)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/swiftspatial\/vector3d\/init(vector:)","title":"init(vector: SIMD3<Double>)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector3d\/init(x:y:z:)-3f4x","title":"init<T>(x: T, y: T, z: T)","type":"init"},{"path":"\/documentation\/swiftspatial\/vector3d\/init(x:y:z:)-4vtdb","title":"init(x: Double, y: Double, z: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/length","title":"var length: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/vector3d\/lengthsquared","title":"var lengthSquared: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/vector3d\/normalized","title":"var normalized: Vector3D","type":"property"},{"path":"\/documentation\/swiftspatial\/vector3d\/vector","title":"var vector: SIMD3<Double>","type":"property"},{"path":"\/documentation\/swiftspatial\/vector3d\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/vector3d\/y","title":"var y: Double","type":"property"},{"path":"\/documentation\/swiftspatial\/vector3d\/z","title":"var z: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/cross(_:)","title":"func cross(Vector3D) -> Vector3D","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/dot(_:)","title":"func dot(Vector3D) -> Double","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/normalize()","title":"func normalize()","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/projected(_:)","title":"func projected(Vector3D) -> Vector3D","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/reflected(_:)","title":"func reflected(Vector3D) -> Vector3D","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/rotation(to:)","title":"func rotation(to: Vector3D) -> Rotation3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/forward","title":"static let forward: Vector3D","type":"property"},{"path":"\/documentation\/swiftspatial\/vector3d\/right","title":"static let right: Vector3D","type":"property"},{"path":"\/documentation\/swiftspatial\/vector3d\/up","title":"static let up: Vector3D","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/+(_:)-9afk3","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/+(_:_:)-1e690","title":"static func + (Vector3D, Vector3D) -> Vector3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/+=(_:_:)-1tl6o","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/+=(_:_:)-65f8w","title":"static func += (inout Vector3D, Vector3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/-(_:_:)-87zlg","title":"static func - (Vector3D, Vector3D) -> Vector3D","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/-=(_:_:)-5jk3a","title":"static func -= (inout Vector3D, Vector3D)","type":"op"},{"path":"\/documentation\/swiftspatial\/vector3d\/-=(_:_:)-71mq8","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)","title":"func isApproximatelyEqual<Magnitude>(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/zero","title":"static let zero: Vector3D","type":"property"}],"path":"\/documentation\/swiftspatial\/vector3d\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Vector3D, absoluteTolerance: Double, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/isapproximatelyequal(to:relativetolerance:)","title":"func isApproximatelyEqual(to: Vector3D, relativeTolerance: Double) -> Bool","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/isapproximatelyequal(to:tolerance:)","title":"func isApproximatelyEqual(to: Self, tolerance: Self.Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/swiftspatial\/vector3d\/approximatelyequatable-implementations","title":"ApproximatelyEquatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftspatial\/vector3d\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftspatial\/vector3d\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/vector3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/init(arrayliteral:)","title":"init(arrayLiteral: Double...)","type":"init"}],"path":"\/documentation\/swiftspatial\/vector3d\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/isfinite","title":"var isFinite: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/vector3d\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/swiftspatial\/vector3d\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/apply(_:)-3lj5c","title":"func apply(Pose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/apply(_:)-9vqr8","title":"func apply(ScaledPose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/applying(_:)-1fl55","title":"func applying(Pose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/applying(_:)-22xn8","title":"func applying(ScaledPose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/unapply(_:)-54lt","title":"func unapply(ScaledPose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/unapply(_:)-5lmg7","title":"func unapply(Pose3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/unapplying(_:)-8qta8","title":"func unapplying(Pose3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/unapplying(_:)-9r34e","title":"func unapplying(ScaledPose3D) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/infinity","title":"static let infinity: Vector3D","type":"property"}],"path":"\/documentation\/swiftspatial\/vector3d\/primitive3d-implementations","title":"Primitive3D Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/rotate(by:)-1xnah","title":"func rotate(by: simd_quatd)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/rotate(by:)-2cs9p","title":"func rotate(by: Rotation3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/rotated(by:)-39ysw","title":"func rotated(by: simd_quatd) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/rotated(by:)-3dxxj","title":"func rotated(by: Rotation3D) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/vector3d\/rotatable3d-implementations","title":"Rotatable3D Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/scalarcount","title":"var scalarCount: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/subscript(_:)","title":"subscript(Int) -> Double","type":"subscript"}],"path":"\/documentation\/swiftspatial\/vector3d\/simdstorage-implementations","title":"SIMDStorage Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/vector3d\/scale(by:)","title":"func scale(by: Size3D)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/scaleby(x:y:z:)","title":"func scaleBy(x: Double, y: Double, z: Double)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/scaled(by:)","title":"func scaled(by: Size3D) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/scaledby(x:y:z:)","title":"func scaledBy(x: Double, y: Double, z: Double) -> Self","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/uniformlyscale(by:)","title":"func uniformlyScale(by: Double)","type":"method"},{"path":"\/documentation\/swiftspatial\/vector3d\/uniformlyscaled(by:)","title":"func uniformlyScaled(by: Double) -> Self","type":"method"}],"path":"\/documentation\/swiftspatial\/vector3d\/scalable3d-implementations","title":"Scalable3D Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/vector3d","title":"Vector3D","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/cos(_:)","title":"func cos(Angle2D) -> Double","type":"func"},{"path":"\/documentation\/swiftspatial\/cosh(_:)","title":"func cosh(Angle2D) -> Double","type":"func"},{"path":"\/documentation\/swiftspatial\/sin(_:)","title":"func sin(Angle2D) -> Double","type":"func"},{"path":"\/documentation\/swiftspatial\/sinh(_:)","title":"func sinh(Angle2D) -> Double","type":"func"},{"path":"\/documentation\/swiftspatial\/tan(_:)","title":"func tan(Angle2D) -> Double","type":"func"},{"path":"\/documentation\/swiftspatial\/tanh(_:)","title":"func tanh(Angle2D) -> Double","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/volumetric","title":"Volumetric","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/axis2d\/x","title":"case x","type":"case"},{"path":"\/documentation\/swiftspatial\/axis2d\/y","title":"case y","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/axis2d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/axis2d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/axis2d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/axis2d","title":"Axis2D","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/axis3d\/x","title":"case x","type":"case"},{"path":"\/documentation\/swiftspatial\/axis3d\/y","title":"case y","type":"case"},{"path":"\/documentation\/swiftspatial\/axis3d\/z","title":"case z","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/axis3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/axis3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftspatial\/axis3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/axis3d","title":"Axis3D","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/simd\/simd_quatd\/identity","title":"static let identity: simd_quatd","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/simd\/simd_quatd\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/swiftspatial\/simd\/simd_quatd\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftspatial\/simd\/simd_quatd\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/swiftspatial\/simd\/simd_quatd\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/swiftspatial\/simd\/simd_quatd","title":"simd_quatd","type":"extension"}],"path":"\/documentation\/swiftspatial\/simd","title":"simd","type":"extension"}],"path":"\/documentation\/swiftspatial","title":"SwiftSpatial","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}